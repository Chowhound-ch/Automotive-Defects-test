<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="per.chowhound.hfut.mapper.UserMapper">
    
    <resultMap type="per.chowhound.hfut.domain.User" id="UserResult">
        <result property="userId"    column="user_id"    />
        <result property="username"    column="username"    />
        <result property="password"    column="password"    />
        <result property="avatar"    column="avatar"    />
        <result property="roleId"    column="role_id"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createTime"    column="create_time"    />
        <result property="isDelete"    column="is_delete"    />
        <result property="phone"    column="phone"    />
    </resultMap>

    <sql id="selectUserVo">
        select user_id, username, password, avatar, role_id, update_time, create_time, is_delete, phone from user
    </sql>

    <select id="selectUserList" parameterType="per.chowhound.hfut.domain.User" resultMap="UserResult">
        <include refid="selectUserVo"/>
        <where>  
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="password != null  and password != ''"> and password = #{password}</if>
            <if test="avatar != null  and avatar != ''"> and avatar = #{avatar}</if>
            <if test="roleId != null "> and role_id = #{roleId}</if>
            <if test="isDelete != null "> and is_delete = #{isDelete}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
        </where>
    </select>
    
    <select id="selectUserByUserId" parameterType="Long" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where user_id = #{userId}
    </select>

    <insert id="insertUser" parameterType="per.chowhound.hfut.domain.User" useGeneratedKeys="true" keyProperty="userId">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">username,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="avatar != null and avatar != ''">avatar,</if>
            <if test="roleId != null">role_id,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createTime != null">create_time,</if>
            <if test="isDelete != null">is_delete,</if>
            <if test="phone != null">phone,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">#{username},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="avatar != null and avatar != ''">#{avatar},</if>
            <if test="roleId != null">#{roleId},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="isDelete != null">#{isDelete},</if>
            <if test="phone != null">#{phone},</if>
         </trim>
    </insert>

    <update id="updateUser" parameterType="per.chowhound.hfut.domain.User">
        update user
        <trim prefix="SET" suffixOverrides=",">
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="roleId != null">role_id = #{roleId},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="isDelete != null">is_delete = #{isDelete},</if>
            <if test="phone != null">phone = #{phone},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteUserByUserId" parameterType="Long">
        delete from user where user_id = #{userId}
    </delete>

    <delete id="deleteUserByUserIds" parameterType="String">
        delete from user where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>